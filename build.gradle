buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE' //springBootVersion 정의
    }
    repositories {
        mavenCentral()

        //    maven central 대신에 이용할 수 있음.  jcenter에 라이브러리 업로드 시 mavenCentral에도 업로드 됨.
        jcenter()
    }
    dependencies {
        //  위에서 정의한 버전으로 사용
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//  앞서 선언한 플러그인 의존성들을 적용할 것인지를 결정
apply plugin: 'java'
apply plugin: 'eclipse-wtp'     //'eclipse'와 차이 : Web Tools Project allinone으로써 웹 어플리케이션 개발환경 포함
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //스프링부트 의존성 관리, 필수 !!

//  cnttech plugin
apply plugin: 'idea'

//  우선은 한그룹으로 정의, 모듈별로 패키지가 나뉘게 되면 분리
group 'com.cntt.systemfailuremgnt'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    //기본
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.microsoft.sqlserver:mssql-jdbc'


    testCompile group: 'junit', name: 'junit', version: '4.12'

    annotationProcessor 'org.projectlombok:lombok'
}
